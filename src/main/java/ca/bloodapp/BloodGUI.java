/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ca.bloodapp;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * 15/03/2025
 *
 * @author Linru wang
 */
public class BloodGUI extends javax.swing.JFrame {

    private DefaultListModel<String> patientListModel;
    //connect tracker and scheduler 
    private Tracker tracker;
    private Scheduler scheduler;

    /**
     * Creates new form BloodGUI
     */
    public BloodGUI() {
        initComponents();
        //store a list model for patientList
        patientListModel = new DefaultListModel<>();
        patientList.setModel(patientListModel);

        tracker = new Tracker();
        scheduler = new Scheduler();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        priorityLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        priorityTF = new javax.swing.JTextField();
        gpLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTA = new javax.swing.JTextArea();
        addBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        noshowBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientList = new javax.swing.JList<>();
        listBtn = new javax.swing.JButton();
        gpTF = new javax.swing.JTextField();
        infoLbl = new javax.swing.JLabel();
        ageLbl = new javax.swing.JLabel();
        ageTF = new javax.swing.JTextField();
        wardCB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 204, 204));
        setPreferredSize(new java.awt.Dimension(585, 575));

        titleLbl.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 19)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(102, 0, 0));
        titleLbl.setText("Blood Test Scheduler");

        priorityLbl.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 15)); // NOI18N
        priorityLbl.setForeground(new java.awt.Color(102, 0, 0));
        priorityLbl.setText("Priority: ");

        nameLbl.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 15)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(102, 0, 0));
        nameLbl.setText("Name:");

        gpLbl.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 15)); // NOI18N
        gpLbl.setForeground(new java.awt.Color(102, 0, 0));
        gpLbl.setText("GP Details: ");

        infoTA.setColumns(20);
        infoTA.setRows(5);
        jScrollPane1.setViewportView(infoTA);

        addBtn.setBackground(new java.awt.Color(255, 204, 204));
        addBtn.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 12)); // NOI18N
        addBtn.setText("Add");
        addBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        nextBtn.setBackground(new java.awt.Color(255, 204, 204));
        nextBtn.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 12)); // NOI18N
        nextBtn.setText("Next");
        nextBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        noshowBtn.setBackground(new java.awt.Color(255, 204, 204));
        noshowBtn.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 12)); // NOI18N
        noshowBtn.setForeground(new java.awt.Color(204, 0, 0));
        noshowBtn.setText("NO SHOW");
        noshowBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        noshowBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        noshowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noshowBtnActionPerformed(evt);
            }
        });

        patientList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(patientList);

        listBtn.setBackground(new java.awt.Color(255, 204, 204));
        listBtn.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        listBtn.setText("List");
        listBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBtnActionPerformed(evt);
            }
        });

        gpTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gpTFActionPerformed(evt);
            }
        });

        infoLbl.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        infoLbl.setForeground(new java.awt.Color(102, 0, 0));
        infoLbl.setText("Patient Info:");

        ageLbl.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 15)); // NOI18N
        ageLbl.setForeground(new java.awt.Color(102, 0, 0));
        ageLbl.setText("Age:");

        ageTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTFActionPerformed(evt);
            }
        });

        wardCB.setBackground(new java.awt.Color(255, 204, 204));
        wardCB.setFont(new java.awt.Font("Microsoft YaHei UI", 3, 14)); // NOI18N
        wardCB.setForeground(new java.awt.Color(102, 0, 0));
        wardCB.setText("Hospital Ward");
        wardCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(priorityLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addGap(499, 499, 499))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(gpLbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(gpTF, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                            .addComponent(wardCB))
                        .addComponent(nameTF)
                        .addComponent(priorityTF)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(noshowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(infoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(titleLbl)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLbl))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLbl)
                    .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wardCB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorityLbl)
                    .addComponent(priorityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gpLbl)
                    .addComponent(gpTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(infoLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noshowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        wardCB.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //implement updatePatientList
    private void updatePatientList() {
        //clear the current list
        patientListModel.clear();

        //retrieve ordered patients from the priority queue
        List<Blood> sortedPatients = scheduler.getPatients();

        //ensure patients displayed by correct order
        for (Blood patient : sortedPatients) {
            patientListModel.addElement(
                    patient.getName() + " (Age: " + patient.getAge()
                    + ", Priority: " + patient.getPriority()
                    + ", GP Details: " + patient.getGpDetails()
                    + ", Hospital Ward: " + (patient.isWard() ? "Yes" : "No") + ")"
            );
        }
    }

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        //study from PersonsGUI from lecturer
        String name;
        name = nameTF.getText();
        String priority;
        priority = priorityTF.getText();
        String gpDetails;
        gpDetails = gpTF.getText();
        String ageText;
        ageText = ageTF.getText();
        Boolean ward;
        ward = wardCB.isSelected();

        //validate input fields
        if (name.isEmpty() || priority.isEmpty() || gpDetails.isEmpty() || ageText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No empty field please!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int age;
        age = Integer.parseInt(ageText);

        //create a new Blood object add to the scheduler
        Blood newPatient = new Blood(name, priority, gpDetails, age, ward);
        scheduler.enqueue(newPatient);

        infoTA.append(name + " (Age: " + age + ", Priority: " + priority + ", Hospital ward: " + (ward ? "Yes" : "No") + ") was added to the list.\n");
        //update patients list by priority order
        updatePatientList();

        //clear input
        nameTF.setText("");
        priorityTF.setText("");
        gpTF.setText("");
        ageTF.setText("");
        wardCB.setSelected(false);
    }//GEN-LAST:event_addBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:

        //study from HumiltonGUI example in moodle
        if (scheduler.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No patients left in the queue!", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Blood nextPatient = scheduler.dequeue();
            infoTA.append("Next Patient: " + nextPatient.getName()
                    + " (Age: " + nextPatient.getAge()
                    + ", Priority: " + nextPatient.getPriority()
                    + ", GP details: " + nextPatient.getGpDetails()
                    + ", Hospital ward: " + (nextPatient.isWard() ? "Yes" : "No") + ")\n");

            updatePatientList(); // Refresh the list
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void noshowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noshowBtnActionPerformed
        // TODO add your handling code here:
        if (!scheduler.isEmpty()) {
            Blood noShowPatient = scheduler.dequeue();
            //make sure only the last 5 noshow patients are stored
            if (tracker.size() >= 5) {
                tracker.pop();
            }
            tracker.push(noShowPatient);
            updatePatientList();
            JOptionPane.showMessageDialog(this, "Patient marked as 'No Show': " + noShowPatient.getName(), "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No patients to mark as no-show !", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_noshowBtnActionPerformed

    private void listBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBtnActionPerformed
        // TODO add your handling code here:

        infoTA.append("Last 5 NOSHOW Patients:\n");
        for (Blood patient : tracker.getLastNoShows()) {
            infoTA.append(patient.getName() + " (" + patient.getPriority() + ")\n");
        }
    }//GEN-LAST:event_listBtnActionPerformed

    private void gpTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gpTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gpTFActionPerformed

    private void ageTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTFActionPerformed

    private void wardCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wardCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTF;
    private javax.swing.JLabel gpLbl;
    private javax.swing.JTextField gpTF;
    private javax.swing.JLabel infoLbl;
    private javax.swing.JTextArea infoTA;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton listBtn;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton noshowBtn;
    private javax.swing.JList<String> patientList;
    private javax.swing.JLabel priorityLbl;
    private javax.swing.JTextField priorityTF;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JCheckBox wardCB;
    // End of variables declaration//GEN-END:variables

}
